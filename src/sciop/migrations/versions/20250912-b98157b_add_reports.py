"""add-reports

Revision ID: b98157bb48bd
Revises: 99812ae0d9b1
Create Date: 2025-09-12 03:39:55.200159+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b98157bb48bd"
down_revision: Union[str, None] = "99812ae0d9b1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("reports", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "report_type",
                sa.Enum(
                    "rules",
                    "spam",
                    "malicious",
                    "fake",
                    "incorrect",
                    "duplicate",
                    "other",
                    name="reporttype",
                ),
                nullable=False,
            )
        )
        batch_op.add_column(sa.Column("opened_by_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("resolved_by_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("comment", sqlmodel.sql.sqltypes.AutoString(), nullable=True))
        batch_op.add_column(
            sa.Column(
                "action",
                sa.Enum(
                    "request",
                    "approve",
                    "unapprove",
                    "deny",
                    "report",
                    "add_scope",
                    "remove_scope",
                    "dismiss",
                    "trust",
                    "distrust",
                    "suspend",
                    "restore",
                    "remove",
                    name="moderationaction",
                ),
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column("action_comment", sqlmodel.sql.sqltypes.AutoString(), nullable=True)
        )
        batch_op.add_column(sa.Column("target_dataset_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("target_dataset_part_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("target_upload_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("target_account_id", sa.Integer(), nullable=True))
        batch_op.create_index(batch_op.f("ix_reports_opened_by_id"), ["opened_by_id"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_reports_resolved_by_id"), ["resolved_by_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_reports_target_account_id"), ["target_account_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_reports_target_dataset_id"), ["target_dataset_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_reports_target_dataset_part_id"),
            ["target_dataset_part_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_reports_target_upload_id"), ["target_upload_id"], unique=False
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_reports_opened_by_id_accounts"),
            "accounts",
            ["opened_by_id"],
            ["account_id"],
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_reports_resolved_by_id_accounts"),
            "accounts",
            ["resolved_by_id"],
            ["account_id"],
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_reports_target_account_id_accounts"),
            "accounts",
            ["target_account_id"],
            ["account_id"],
            ondelete="SET NULL",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_reports_target_dataset_id_datasets"),
            "datasets",
            ["target_dataset_id"],
            ["dataset_id"],
            ondelete="SET NULL",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_reports_target_dataset_part_id_dataset_parts"),
            "dataset_parts",
            ["target_dataset_part_id"],
            ["dataset_part_id"],
            ondelete="SET NULL",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_reports_target_upload_id_uploads"),
            "uploads",
            ["target_upload_id"],
            ["upload_id"],
            ondelete="SET NULL",
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("reports", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_reports_target_upload_id_uploads"), type_="foreignkey"
        )
        batch_op.drop_constraint(
            batch_op.f("fk_reports_target_dataset_part_id_dataset_parts"), type_="foreignkey"
        )
        batch_op.drop_constraint(
            batch_op.f("fk_reports_target_dataset_id_datasets"), type_="foreignkey"
        )
        batch_op.drop_constraint(
            batch_op.f("fk_reports_target_account_id_accounts"), type_="foreignkey"
        )
        batch_op.drop_constraint(
            batch_op.f("fk_reports_resolved_by_id_accounts"), type_="foreignkey"
        )
        batch_op.drop_constraint(batch_op.f("fk_reports_opened_by_id_accounts"), type_="foreignkey")
        batch_op.drop_index(batch_op.f("ix_reports_target_upload_id"))
        batch_op.drop_index(batch_op.f("ix_reports_target_dataset_part_id"))
        batch_op.drop_index(batch_op.f("ix_reports_target_dataset_id"))
        batch_op.drop_index(batch_op.f("ix_reports_target_account_id"))
        batch_op.drop_index(batch_op.f("ix_reports_resolved_by_id"))
        batch_op.drop_index(batch_op.f("ix_reports_opened_by_id"))
        batch_op.drop_column("target_account_id")
        batch_op.drop_column("target_upload_id")
        batch_op.drop_column("target_dataset_part_id")
        batch_op.drop_column("target_dataset_id")
        batch_op.drop_column("action_comment")
        batch_op.drop_column("action")
        batch_op.drop_column("comment")
        batch_op.drop_column("resolved_by_id")
        batch_op.drop_column("opened_by_id")
        batch_op.drop_column("report_type")

    # ### end Alembic commands ###
