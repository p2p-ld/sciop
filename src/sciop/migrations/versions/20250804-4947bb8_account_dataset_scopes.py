"""account_dataset_scopes

Revision ID: 4947bb87abc6
Revises: efb45cd6cac9
Create Date: 2025-08-04 23:33:29.007458+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4947bb87abc6"
down_revision: Union[str, None] = "efb45cd6cac9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "account_dataset_scope_links",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("dataset_id", sa.Integer(), nullable=False),
        sa.Column("scope_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.account_id"],
            name=op.f("fk_account_dataset_scope_links_account_id_accounts"),
        ),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["datasets.dataset_id"],
            name=op.f("fk_account_dataset_scope_links_dataset_id_datasets"),
        ),
        sa.ForeignKeyConstraint(
            ["scope_id"],
            ["scopes.scope_id"],
            name=op.f("fk_account_dataset_scope_links_scope_id_scopes"),
        ),
        sa.PrimaryKeyConstraint(
            "account_id",
            "dataset_id",
            "scope_id",
            name=op.f("pk_account_dataset_scope_links_account_id_dataset_id_scope_id"),
        ),
        sa.UniqueConstraint(
            "account_id", "scope_id", "dataset_id", name="_account_dataset_scope_uc"
        ),
    )
    with op.batch_alter_table("account_dataset_scope_links", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_account_dataset_scope_links_account_id"), ["account_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_account_dataset_scope_links_dataset_id"), ["dataset_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_account_dataset_scope_links_scope_id"), ["scope_id"], unique=False
        )
    with op.batch_alter_table("scopes", schema=None) as batch_op:
        batch_op.alter_column(
            "scope",
            existing_type=sa.VARCHAR(length=6),
            type_=sa.Enum(
                "submit",
                "upload",
                "review",
                "admin",
                "root",
                "edit",
                "permissions",
                "delete",
                name="scopes",
            ),
            existing_nullable=False,
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("scopes", schema=None) as batch_op:
        batch_op.alter_column(
            "scope",
            existing_type=sa.Enum(
                "submit",
                "upload",
                "review",
                "admin",
                "root",
                "edit",
                "permissions",
                "delete",
                name="scopes",
            ),
            type_=sa.VARCHAR(length=6),
            existing_nullable=False,
        )
    with op.batch_alter_table("account_dataset_scope_links", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_account_dataset_scope_links_scope_id"))
        batch_op.drop_index(batch_op.f("ix_account_dataset_scope_links_dataset_id"))
        batch_op.drop_index(batch_op.f("ix_account_dataset_scope_links_account_id"))

    op.drop_table("account_dataset_scope_links")
    # ### end Alembic commands ###
