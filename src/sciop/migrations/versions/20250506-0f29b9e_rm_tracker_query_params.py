"""rm-tracker-query-params

Revision ID: 0f29b9ed0f9d
Revises: 82afde6fd25b
Create Date: 2025-05-06 02:26:13.473722+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0f29b9ed0f9d"
down_revision: Union[str, None] = "82afde6fd25b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    md = sa.MetaData()
    table = sa.Table(
        "trackers",
        md,
        sa.Column("announce_url", sa.String(), key="announce_url"),
        sa.Column("tracker_id", sa.Integer(), key="tracker_id"),
    )
    link = sa.Table(
        "torrent_tracker_links", md, sa.Column("tracker_id", sa.Integer(), key="tracker_id")
    )
    stmt = sa.select(table.c.tracker_id, table.c.announce_url).where(
        table.c.announce_url.like("%?%")
    )
    conn = op.get_bind()
    res = conn.execute(stmt)
    for t_id, announce in res:
        # get the cleaned one
        # since we know by manual inspection all the urls are correctly split by this,
        # and we know the clean versions already exist, use this cheap version
        # (and we hope nobody is running an old version of sciop already)
        clean_announce = announce.split("?")[0]
        clean_tracker_id = conn.execute(
            sa.select(table.c.tracker_id).where(table.c.announce_url == clean_announce)
        ).scalar()
        assert clean_tracker_id is not None
        conn.execute(
            link.update().where(link.c.tracker_id == t_id).values(tracker_id=clean_tracker_id)
        )
    conn.execute(sa.delete(table).where(table.c.announce_url.like("%?%")))


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
