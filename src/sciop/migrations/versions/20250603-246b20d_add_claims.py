"""add-claims

Revision ID: 246b20d19ea1
Revises: 5560db834bbe
Create Date: 2025-06-03 07:08:46.277599+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "246b20d19ea1"
down_revision: Union[str, None] = "5560db834bbe"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dataset_claim",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column(
            "status", sa.Enum("in_progress", "completed", name="claimstatus"), nullable=False
        ),
        sa.Column("dataset_claim_id", sa.Integer(), nullable=False),
        sa.Column("dataset_id", sa.Integer(), nullable=True),
        sa.Column("dataset_part_id", sa.Integer(), nullable=True),
        sa.Column("account_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.account_id"],
            name=op.f("fk_dataset_claim_account_id_accounts"),
        ),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["datasets.dataset_id"],
            name=op.f("fk_dataset_claim_dataset_id_datasets"),
        ),
        sa.ForeignKeyConstraint(
            ["dataset_part_id"],
            ["dataset_parts.dataset_part_id"],
            name=op.f("fk_dataset_claim_dataset_part_id_dataset_parts"),
        ),
        sa.PrimaryKeyConstraint("dataset_claim_id", name=op.f("pk_dataset_claim_dataset_claim_id")),
        sa.UniqueConstraint(
            "account_id",
            "dataset_id",
            "dataset_part_id",
            name="_account_id_dataset_id_dataset_part_id_uc",
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("dataset_claim")
    # ### end Alembic commands ###
